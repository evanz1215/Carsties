services:
  postgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
  mongodb:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=mongopw
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
  auction-svc:
    image: ${DOCKER_REGISTRY-}auction-svc:latest
    build:
      context: .
      dockerfile: src/AuctionService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Server=postgres;User Id=postgres;Password=postgres;Database=auctions
      - IdentityServiceUrl=http://identity-svc
    ports:
      - "7001:80"
    depends_on:
      - postgres
      - rabbitmq
  search-svc:
    image: ${DOCKER_REGISTRY-}search-svc:latest
    build:
      context: .
      dockerfile: src/SearchService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__MongoDbConnection=mongodb://root:mongopw@mongodb
      - AuctionServiceUrl=http://auction-svc
    ports:
      - "7002:80"
    depends_on:
      - mongodb
      - rabbitmq
  identity-svc:
    image: ${DOCKER_REGISTRY-}identity-svc:latest
    build:
      context: .
      dockerfile: src/IdentityService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=postgres;User Id=postgres;Password=postgres;Database=identity;
    ports:
      - "5001:80"
    depends_on:
      - postgres
volumes:
  pgdata:
  mongodata:
